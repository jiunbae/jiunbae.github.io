{"version":3,"file":"component---src-pages-index-tsx-1c26e3ef5c83a055a7e2.js","mappings":"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","sources":["webpack://jiunbae.github.io/./src/views/Home/Home.tsx","webpack://jiunbae.github.io/./src/views/Home/hooks/usePostInfiniteScroll.tsx","webpack://jiunbae.github.io/./src/views/Home/Home.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Date/Date.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Date/Date.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Description/Description.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Description/Description.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/TagList/TagList.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/TagList/TagList.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Title/Title.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Title/Title.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/Post.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/Post.tsx","webpack://jiunbae.github.io/./src/views/Home/components/PostList/PostList.tsx","webpack://jiunbae.github.io/./src/views/Home/components/PostList/PostList.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/TagButtonWithCount/TagButtonWithCount.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/TagButtonWithCount/TagButtonWithCount.tsx","webpack://jiunbae.github.io/./src/views/Home/components/TagList/TagList.tsx","webpack://jiunbae.github.io/./src/views/Home/components/TagList/TagList.module.scss","webpack://jiunbae.github.io/./src/views/Home/constants/Tag.ts","webpack://jiunbae.github.io/./src/views/Home/hooks/useTag.tsx"],"sourcesContent":["import type { HeadProps, PageProps } from 'gatsby'\nimport { FloatingButton, Seo } from '@/components'\nimport { getRefinedStringValue } from '@/utils'\n\nimport { PostList, TagList } from './components'\nimport { usePostInfiniteScroll, useTag } from './hooks'\nimport * as styles from './Home.module.scss'\n\ninterface LocationState {\n  tag?: string;\n}\n\nconst Home = ({ data, location }: PageProps<Queries.HomeQuery, object, LocationState>) => {\n  const { nodes: allPosts, totalCount, group } = data.allMarkdownRemark\n  const { tags, selectedTag, clickTag } = useTag(totalCount, group, location.state?.tag, { pathname: '/' })\n  const { visiblePosts } = usePostInfiniteScroll(allPosts, selectedTag, totalCount)\n\n  return (\n    <main className={styles.main}>\n      <section className={styles.wrapper}>\n        <TagList tags={tags} selectedTag={selectedTag} clickTag={clickTag} className={styles.tagList} />\n        <PostList posts={visiblePosts} className={styles.postList} />\n      </section>\n      <FloatingButton />\n    </main>\n  )\n}\n\nexport const Head = ({ location, data: { site, file } }: HeadProps<Queries.HomeQuery>) => {\n  const { href } = location as typeof location & { href?: string }\n  const pageUrl = href ?? location.pathname\n  const seo = {\n    title: site?.siteMetadata.title,\n    description: site?.siteMetadata.description,\n    heroImage: getRefinedStringValue(file?.publicURL)\n  }\n\n  return <Seo title={seo.title} description={seo.description} heroImage={seo.heroImage} pathname={pageUrl}></Seo>\n}\n\nexport default Home\n","import { useEffect, useMemo, useState } from 'react'\n\nimport { $ } from '@/utils'\n\nimport { TAGS } from '../constants'\n\nexport const usePostInfiniteScroll = (\n  allPosts: Queries.HomeQuery['allMarkdownRemark']['nodes'],\n  selectedTag: string,\n  totalCount: number\n) => {\n  const posts = useMemo(\n    () => allPosts.filter(({ frontmatter: { tags } }) => selectedTag === TAGS.ALL || tags.includes(selectedTag)),\n    [allPosts, selectedTag]\n  )\n  const [displayedItems, setDisplayedItems] = useState(8)\n  const visiblePosts = posts.slice(0, displayedItems)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!entries[0].isIntersecting) return\n\n        if (displayedItems <= totalCount) {\n          setDisplayedItems(prev => prev + 8)\n        } else {\n          observer.disconnect()\n        }\n      },\n      { rootMargin: '400px 0px', threshold: 0 }\n    )\n    observer.observe($<HTMLElement>('footer'))\n    return () => observer.disconnect()\n  }, [displayedItems, totalCount])\n\n  return { visiblePosts }\n}\n","// extracted by mini-css-extract-plugin\nexport var divider = \"Home-module--divider--97386\";\nexport var main = \"Home-module--main--4384c\";\nexport var postList = \"Home-module--postList--4f00e\";\nexport var shrinkSpace = \"Home-module--shrinkSpace--2ee2b\";\nexport var tagList = \"Home-module--tagList--c441a\";\nexport var wrapper = \"Home-module--wrapper--cbcbc\";","import clsx from 'clsx'\n\nimport * as styles from './Date.module.scss'\n\ntype DateProps = {\n  date: string;\n  className?: string;\n};\n\nexport const Date = ({ date, className }: DateProps) => <h3 className={clsx(styles.date, className)}>{date}</h3>\n","// extracted by mini-css-extract-plugin\nexport var date = \"Date-module--date--d77e7\";","import clsx from 'clsx'\n\nimport * as styles from './Description.module.scss'\n\ntype DescriptionProps = {\n  description: string;\n  className?: string;\n};\n\nexport const Description = ({ description, className }: DescriptionProps) => (\n  <p className={clsx(styles.description, className)}>{description}</p>\n)\n","// extracted by mini-css-extract-plugin\nexport var description = \"Description-module--description--ecdc9\";","import clsx from 'clsx'\n\nimport { Tag } from '@/components'\n\nimport * as styles from './TagList.module.scss'\n\ntype TagListProps = {\n  tags: readonly string[];\n  className?: string;\n};\n\nexport const TagList = ({ tags, className }: TagListProps) => (\n  <ul className={clsx(styles.tagList, className)}>\n    {tags.map(tag => (\n      <Tag key={tag} name={tag} />\n    ))}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var tagList = \"TagList-module--tagList--4ae6b\";","import clsx from 'clsx'\n\nimport * as styles from './Title.module.scss'\n\ntype TitleProps = {\n  title: string;\n  className?: string;\n};\n\nexport const Title = ({ title, className }: TitleProps) => <h3 className={clsx(styles.title, className)}>{title}</h3>\n","// extracted by mini-css-extract-plugin\nexport var title = \"Title-module--title--8cf89\";","// extracted by mini-css-extract-plugin\nexport var articleLink = \"Post-module--articleLink--b5ab5\";\nexport var card = \"Post-module--card--a4c01\";\nexport var cardCaption = \"Post-module--cardCaption--0aa11\";\nexport var cardDate = \"Post-module--cardDate--c6c0c\";\nexport var cardDescription = \"Post-module--cardDescription--72eec\";\nexport var cardImage = \"Post-module--cardImage--a596d\";\nexport var cardTagList = \"Post-module--cardTagList--5f1d7\";\nexport var cardTitle = \"Post-module--cardTitle--ba640\";\nexport var item = \"Post-module--item--967c1\";\nexport var itemCaption = \"Post-module--itemCaption--6915d\";\nexport var itemDate = \"Post-module--itemDate--33d77\";\nexport var itemDescription = \"Post-module--itemDescription--3070b\";\nexport var itemFigure = \"Post-module--itemFigure--61e4d\";\nexport var itemImage = \"Post-module--itemImage--af857\";\nexport var itemTags = \"Post-module--itemTags--87afa\";\nexport var itemTitle = \"Post-module--itemTitle--e1aa8\";","import { Link, graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, type IGatsbyImageData, getImage } from 'gatsby-plugin-image'\n\nimport { getRefinedImage } from '@/utils'\n\nimport { Date, Description, TagList, Title } from './components'\nimport * as styles from './Post.module.scss'\n\ntype PostProps = {\n  variants: 'card' | 'item';\n  title: string;\n  description: string;\n  date: string;\n  tags: readonly string[];\n  slug: string;\n  heroImage: IGatsbyImageData | undefined;\n  heroImageAlt: string | undefined | null;\n};\n\ntype StyledProps = {\n  heroImage: IGatsbyImageData;\n  heroImageAlt: string;\n  className: string;\n}\n\ntype CardPostProps = Omit<PostProps, 'variants'> & StyledProps\ntype ItemPostProps = Omit<PostProps, 'variants'> & StyledProps\n\nexport const CardPost = ({\n  title,\n  description,\n  date,\n  tags,\n  slug,\n  heroImage,\n  heroImageAlt,\n  className\n}: CardPostProps) => (\n  <Link to={`/posts${slug}`} className={className}>\n    <article className={styles.card}>\n      <figure>\n        <GatsbyImage image={heroImage} alt={heroImageAlt} className={styles.cardImage} />\n        <figcaption className={styles.cardCaption}>\n          <Date date={date} className={styles.cardDate} />\n          <TagList tags={tags} className={styles.cardTagList} />\n          <Title title={title} className={styles.cardTitle} />\n          <Description description={description} className={styles.cardDescription} />\n        </figcaption>\n      </figure>\n    </article>\n  </Link>\n)\n\nexport const ItemPost = ({\n  title,\n  description,\n  date,\n  tags,\n  slug,\n  heroImage,\n  heroImageAlt,\n  className\n}: ItemPostProps) => (\n  <Link to={`/posts${slug}`} className={className}>\n    <article className={styles.item}>\n      <figure className={styles.itemFigure}>\n        <GatsbyImage image={heroImage} alt={heroImageAlt} className={styles.itemImage} />\n        <figcaption className={styles.itemCaption}>\n          <Title title={title} className={styles.itemTitle} />\n          <Description description={description} className={styles.itemDescription} />\n          <Date date={date} className={styles.itemDate} />\n          <TagList tags={tags} className={styles.itemTags} />\n        </figcaption>\n      </figure>\n    </article>\n  </Link>\n)\n\nexport const Post = ({ variants, title, description, date, tags, slug, heroImage, heroImageAlt }: PostProps) => {\n  const defaultImage = useStaticQuery(graphql`\n    query {\n      cover: file(relativePath: { eq: \"cover.png\" }) {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED)\n        }\n      }\n    }\n  `)\n\n  const image = getRefinedImage(heroImage === undefined ? getImage(defaultImage.cover) : heroImage)\n  const imageAlt = heroImageAlt ?? 'Cover Image'\n\n  return (\n    <Link to={`/posts${slug}`} className={styles.articleLink}>\n      {\n        variants === 'card' ? (\n          <CardPost\n            title={title}\n            description={description}\n            date={date}\n            tags={tags}\n            slug={slug}\n            heroImage={image}\n            heroImageAlt={imageAlt}\n            className={styles.articleLink}\n          />\n        ) : (\n        variants === 'item' ? (\n          <ItemPost\n            title={title}\n            description={description}\n            date={date}\n            tags={tags}\n            slug={slug}\n            heroImage={image}\n            heroImageAlt={imageAlt}\n            className={styles.articleLink}\n          />\n        ) : null)\n      }\n    </Link>\n  )\n}\n","import clsx from 'clsx'\n\nimport { Post } from '../Post'\nimport * as styles from './PostList.module.scss'\n\ntype PostListProps = {\n  posts: Queries.HomeQuery['allMarkdownRemark']['nodes'];\n  className?: string;\n};\n\nexport const PostList = ({ posts, className }: PostListProps) => {\n  return (\n    <ul className={clsx(styles.postList, className)}>\n      {posts.map(({ frontmatter: { title, description, date, tags, slug, heroImage, heroImageAlt }, excerpt, id }) => {\n        const summary = description ?? excerpt ?? ''\n\n        return (\n        <Post\n          key={id}\n          variants=\"item\"\n          title={title}\n          description={summary}\n          date={date}\n          tags={tags}\n          slug={slug}\n          heroImage={heroImage?.childImageSharp?.gatsbyImageData}\n          heroImageAlt={heroImageAlt}\n        />\n        )\n      })}\n    </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var postList = \"PostList-module--postList--61751\";","// extracted by mini-css-extract-plugin\nexport var active = \"TagButtonWithCount-module--active--ce3a5\";\nexport var tagButton = \"TagButtonWithCount-module--tagButton--b55df\";","import clsx from 'clsx'\n\nimport * as styles from './TagButtonWithCount.module.scss'\n\ntype TagButtonWithCountProps = {\n  name: string;\n  count: number;\n  onClick?: () => void;\n  isSelected: boolean;\n};\n\nexport const TagButtonWithCount = ({ name, count, isSelected, onClick }: TagButtonWithCountProps) => (\n  <button onClick={onClick} className={clsx(styles.tagButton, { [styles.active]: isSelected })}>\n    <span>\n      {name} ({count})\n    </span>\n  </button>\n)\n","import clsx from 'clsx'\nimport type { KeyboardEvent, MouseEvent } from 'react'\n\nimport { getRefinedStringValue } from '@/utils'\n\nimport { TagButtonWithCount } from '../TagButtonWithCount'\nimport * as styles from './TagList.module.scss'\n\ninterface TagListProps {\n  tags: { fieldValue: string | null; totalCount: number }[];\n  selectedTag: string;\n  clickTag: (e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;\n  className?: string;\n}\n\nexport const TagList = ({ tags, selectedTag, clickTag, className }: TagListProps) => (\n  <ul\n    className={clsx(styles.tagList, className)}\n    onClick={clickTag}\n    onKeyDown={clickTag}\n    role=\"presentation\"\n  >\n    {tags.map(({ fieldValue, totalCount }) => {\n      const value = getRefinedStringValue(fieldValue)\n      \n      return (\n        <li key={value} className={styles.tagItem} data-tag={value}>\n          <TagButtonWithCount name={value} count={totalCount} isSelected={selectedTag === value} />\n        </li>\n      )\n    })}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var tagItem = \"TagList-module--tagItem--61853\";\nexport var tagList = \"TagList-module--tagList--da91f\";","export const TAGS = {\n  ALL: 'All'\n} as const\n","import type { KeyboardEvent, MouseEvent } from 'react'\nimport { useCallback, useMemo, useState } from 'react'\nimport { navigate } from 'gatsby'\n\nimport { TAGS } from '../constants'\n\ntype TagGroup = {\n  fieldValue: string | null;\n  totalCount: number;\n};\n\ntype UseTagOptions = {\n  pathname?: string;\n};\n\nexport const useTag = (\n  totalCount: number,\n  group: ReadonlyArray<TagGroup>,\n  defaultSelectedTag?: string,\n  { pathname = '/' }: UseTagOptions = {}\n) => {\n  const tags = useMemo(() => {\n    const normalizedGroup = Array.from(group, ({ fieldValue, totalCount: count }) => ({ fieldValue, totalCount: count }))\n    return [{ fieldValue: TAGS.ALL, totalCount }, ...normalizedGroup].sort((a, b) => b.totalCount - a.totalCount)\n  }, [group, totalCount])\n  const [selectedTag, setSelectedTag] = useState<string>(defaultSelectedTag ?? TAGS.ALL)\n  const clickTag = useCallback(({ target }: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => {\n    if (!(target instanceof HTMLElement)) return\n    const tagItem = target.closest('li')\n    const tag = tagItem?.dataset.tag\n    if (tag) {\n      setSelectedTag(tag)\n      navigate(pathname, { replace: true, state: { tag } })\n    }\n  }, [pathname])\n\n  return { tags, selectedTag, clickTag }\n}\n"],"names":["Head","_ref2","location","data","site","file","href","pageUrl","pathname","seo","title","siteMetadata","description","heroImage","getRefinedStringValue","publicURL","_jsx","Seo","_ref","_location$state","nodes","allPosts","totalCount","group","allMarkdownRemark","tags","selectedTag","clickTag","useTag","state","tag","visiblePosts","usePostInfiniteScroll","posts","useMemo","filter","frontmatter","TAGS","ALL","includes","displayedItems","setDisplayedItems","useState","slice","useEffect","observer","IntersectionObserver","entries","isIntersecting","prev","disconnect","rootMargin","threshold","observe","$","_jsxs","className","children","TagList","PostList","FloatingButton","Date","date","clsx","Description","map","Tag","name","Title","articleLink","CardPost","slug","heroImageAlt","Link","to","GatsbyImage","image","alt","ItemPost","Post","_ref3","variants","defaultImage","useStaticQuery","getRefinedImage","undefined","getImage","cover","imageAlt","styles","_heroImage$childImage","excerpt","id","summary","childImageSharp","gatsbyImageData","active","TagButtonWithCount","count","isSelected","onClick","onKeyDown","role","fieldValue","value","defaultSelectedTag","_temp","normalizedGroup","Array","from","concat","sort","a","b","setSelectedTag","useCallback","target","HTMLElement","tagItem","closest","dataset","navigate","replace"],"sourceRoot":""}