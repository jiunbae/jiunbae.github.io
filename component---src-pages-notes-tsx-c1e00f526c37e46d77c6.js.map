{"version":3,"file":"component---src-pages-notes-tsx-c1e00f526c37e46d77c6.js","mappings":"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","sources":["webpack://jiunbae.github.io/./src/views/Notes/components/Note/Note.module.scss","webpack://jiunbae.github.io/./src/views/Notes/components/Note/Note.tsx","webpack://jiunbae.github.io/./src/views/Notes/components/NoteList/NoteList.tsx","webpack://jiunbae.github.io/./src/views/Notes/components/NoteList/NoteList.module.scss","webpack://jiunbae.github.io/./src/views/Notes/Notes.tsx","webpack://jiunbae.github.io/./src/views/Notes/Notes.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Date/Date.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Date/Date.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Description/Description.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Description/Description.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/TagList/TagList.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/TagList/TagList.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Title/Title.tsx","webpack://jiunbae.github.io/./src/views/Home/components/Post/components/Title/Title.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/Post.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/Post/Post.tsx","webpack://jiunbae.github.io/./src/views/Home/components/PostList/PostList.tsx","webpack://jiunbae.github.io/./src/views/Home/components/PostList/PostList.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/TagButtonWithCount/TagButtonWithCount.module.scss","webpack://jiunbae.github.io/./src/views/Home/components/TagButtonWithCount/TagButtonWithCount.tsx","webpack://jiunbae.github.io/./src/views/Home/components/TagList/TagList.tsx","webpack://jiunbae.github.io/./src/views/Home/components/TagList/TagList.module.scss","webpack://jiunbae.github.io/./src/views/Home/constants/Tag.ts","webpack://jiunbae.github.io/./src/views/Home/hooks/useTag.tsx","webpack://jiunbae.github.io/./src/views/Notes/utils.ts","webpack://jiunbae.github.io/./src/images/icons/share.svg"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var actions = \"Note-module--actions--f6431\";\nexport var collapsed = \"Note-module--collapsed--1876e\";\nexport var collapsible = \"Note-module--collapsible--0ec7b\";\nexport var content = \"Note-module--content--de75b\";\nexport var copied = \"Note-module--copied--735d3\";\nexport var date = \"Note-module--date--bdd57\";\nexport var footer = \"Note-module--footer--e50e8\";\nexport var header = \"Note-module--header--78849\";\nexport var note = \"Note-module--note--f201c\";\nexport var shareButton = \"Note-module--shareButton--2dfe7\";\nexport var shareIcon = \"Note-module--shareIcon--e0f99\";\nexport var tag = \"Note-module--tag--f9099\";\nexport var tags = \"Note-module--tags--13eb3\";\nexport var title = \"Note-module--title--998e8\";\nexport var toggleButton = \"Note-module--toggleButton--634f6\";","import clsx from 'clsx'\nimport { useEffect, useRef, useState } from 'react'\n\nimport { getRefinedStringValue } from '@/utils'\n\nimport * as styles from './Note.module.scss'\nimport ShareIcon from '@/images/icons/share.svg'\nimport { buildNoteShareUrl, getNoteAnchorId, sanitizeNoteSlug } from '../../utils'\n\ntype NoteNode = {\n  id: string;\n  html: string | null;\n  frontmatter: {\n    title: string;\n    date: string;\n    tags: readonly (string | null)[] | null;\n    slug: string;\n  };\n};\n\ntype NoteProps = {\n  note: NoteNode;\n  className?: string;\n};\n\nconst COLLAPSE_LINE_LIMIT = 11\n\nexport const Note = ({ note, className }: NoteProps) => {\n  const { frontmatter, html } = note\n  const { title, date, tags, slug } = frontmatter\n  if (!slug) throw new Error('노트 슬러그가 존재하지 않습니다.')\n  const refinedHtml = getRefinedStringValue(html)\n  const visibleTags = (tags ?? []).filter((tag): tag is string => Boolean(tag))\n  const normalizedSlug = sanitizeNoteSlug(slug)\n  const anchorId = getNoteAnchorId(slug)\n  const contentRef = useRef<HTMLDivElement>(null)\n  const [isCollapsed, setIsCollapsed] = useState(true)\n  const [isCollapsible, setIsCollapsible] = useState(false)\n  const [collapseHeight, setCollapseHeight] = useState<number | null>(null)\n  const [isLinkCopied, setIsLinkCopied] = useState(false)\n\n  useEffect(() => {\n    setIsCollapsed(true)\n  }, [refinedHtml])\n\n  useEffect(() => {\n    const evaluate = () => {\n      const element = contentRef.current\n      if (!element) return\n\n      const computedStyle = window.getComputedStyle(element)\n      const lineHeight = parseFloat(computedStyle.lineHeight || '0')\n\n      if (!Number.isFinite(lineHeight) || lineHeight <= 0) {\n        setIsCollapsible(false)\n        setCollapseHeight(null)\n        setIsCollapsed(false)\n        return\n      }\n\n      const maxHeight = lineHeight * COLLAPSE_LINE_LIMIT\n      const shouldCollapse = element.scrollHeight > maxHeight + 1\n\n      setCollapseHeight(shouldCollapse ? maxHeight : null)\n      setIsCollapsible(shouldCollapse)\n\n      if (!shouldCollapse) {\n        setIsCollapsed(false)\n      }\n    }\n\n    evaluate()\n    window.addEventListener('resize', evaluate)\n\n    return () => {\n      window.removeEventListener('resize', evaluate)\n    }\n  }, [refinedHtml])\n\n  const contentStyle = isCollapsible && isCollapsed && collapseHeight !== null\n    ? { maxHeight: collapseHeight }\n    : undefined\n\n  const toggleCollapse = () => {\n    setIsCollapsed(prev => !prev)\n  }\n\n  const handleCopyLink = async () => {\n    const shareUrl = buildNoteShareUrl(slug)\n\n    try {\n      if (typeof navigator !== 'undefined' && navigator.clipboard?.writeText) {\n        await navigator.clipboard.writeText(shareUrl)\n      } else {\n        const fallbackInput = document.createElement('input')\n        fallbackInput.value = shareUrl\n        document.body.appendChild(fallbackInput)\n        fallbackInput.select()\n        document.execCommand('copy')\n        document.body.removeChild(fallbackInput)\n      }\n\n      setIsLinkCopied(true)\n      window.setTimeout(() => setIsLinkCopied(false), 2000)\n    } catch {\n      window.prompt('아래 링크를 복사해주세요.', shareUrl)\n    }\n  }\n\n  return (\n    <li id={anchorId} className={clsx(styles.note, className)} data-note-slug={normalizedSlug}>\n      <article>\n        <header className={styles.header}>\n          <h2 className={styles.title}>{title}</h2>\n          <time className={styles.date}>{date}</time>\n        </header>\n        <section\n          ref={contentRef}\n          style={contentStyle}\n          className={clsx(styles.content, {\n            [styles.collapsible]: isCollapsible,\n            [styles.collapsed]: isCollapsible && isCollapsed\n          })}\n          dangerouslySetInnerHTML={{ __html: refinedHtml }}\n        />\n        {(visibleTags.length > 0 || isCollapsible) && (\n          <div className={styles.footer}>\n            {visibleTags.length > 0 && (\n              <ul className={styles.tags}>\n                {visibleTags.map(tag => (\n                  <li key={tag} className={styles.tag}>{tag}</li>\n                ))}\n              </ul>\n            )}\n            <div className={styles.actions}>\n              <button\n                type=\"button\"\n                className={clsx(styles.shareButton, { [styles.copied]: isLinkCopied })}\n                onClick={handleCopyLink}\n                aria-label=\"노트 링크 복사\"\n                title={isLinkCopied ? '링크 복사됨' : '노트 링크 복사'}\n              >\n                <ShareIcon className={styles.shareIcon} />\n              </button>\n              {isCollapsible && (\n                <button\n                  type=\"button\"\n                  className={styles.toggleButton}\n                  onClick={toggleCollapse}\n                  aria-expanded={!isCollapsed}\n                >\n                  {isCollapsed ? '더보기' : '접기'}\n                </button>\n              )}\n            </div>\n          </div>\n        )}\n      </article>\n    </li>\n  )\n}\n","import clsx from 'clsx'\n\nimport * as styles from './NoteList.module.scss'\nimport { Note } from '../Note'\n\ntype NoteListProps = {\n  notes: Queries.NotesQuery['allMarkdownRemark']['nodes'];\n  className?: string;\n};\n\nexport const NoteList = ({ notes, className }: NoteListProps) => (\n  <ul className={clsx(styles.noteList, className)}>\n    {notes.length === 0 ? (\n      <li className={styles.empty}>아직 등록된 노트가 없습니다.</li>\n    ) : (\n      notes.map(note => (\n        <Note key={note.id} note={note} />\n      ))\n    )}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var empty = \"NoteList-module--empty--1b39e\";\nexport var noteList = \"NoteList-module--noteList--35d81\";","import type { HeadProps, PageProps } from 'gatsby'\nimport { useEffect, useMemo } from 'react'\n\nimport { FloatingButton, Seo } from '@/components'\nimport { getRefinedStringValue } from '@/utils'\n\nimport { TagList } from '../Home/components'\nimport { TAGS } from '../Home/constants'\nimport { useTag } from '../Home/hooks/useTag'\nimport { NoteList } from './components'\nimport * as styles from './Notes.module.scss'\nimport { extractSlugFromLocation, sanitizeNoteSlug } from './utils'\n\ninterface LocationState {\n  tag?: string;\n  note?: string;\n}\n\nconst Notes = ({ data, location }: PageProps<Queries.NotesQuery, object, LocationState>) => {\n  const { nodes: allNotes, totalCount, group } = data.allMarkdownRemark\n  const { tags, selectedTag, clickTag } = useTag(totalCount, group, location.state?.tag, { pathname: '/notes/' })\n\n  const visibleNotes = useMemo(\n    () => allNotes.filter(({ frontmatter }) => {\n      if (selectedTag === TAGS.ALL) return true\n\n      const noteTags = frontmatter.tags ?? []\n      return noteTags.some(tag => tag === selectedTag)\n    }),\n    [allNotes, selectedTag]\n  )\n\n  useEffect(() => {\n    if (typeof window === 'undefined') return\n\n    const slugFromState = location.state?.note ? sanitizeNoteSlug(location.state.note) : null\n    const slugFromLocation = extractSlugFromLocation(location.search, location.hash)\n    const targetSlug = slugFromState || slugFromLocation\n\n    if (!targetSlug) return\n\n    const target = document.querySelector<HTMLElement>(`[data-note-slug='${targetSlug}']`)\n\n    if (!target) return\n\n    const highlight = () => {\n      target.setAttribute('data-highlighted', 'true')\n      target.scrollIntoView({ behavior: 'smooth', block: 'start' })\n\n      window.setTimeout(() => {\n        target.removeAttribute('data-highlighted')\n      }, 2500)\n    }\n\n    // Delay to ensure rendering complete\n    const timer = window.setTimeout(highlight, 150)\n\n    return () => {\n      window.clearTimeout(timer)\n    }\n  }, [location.search, location.hash, location.state, visibleNotes])\n\n  return (\n    <main className={styles.main}>\n      <TagList tags={tags} selectedTag={selectedTag} clickTag={clickTag} className={styles.tagList} />\n      <NoteList notes={visibleNotes} className={styles.noteList} />\n      <FloatingButton />\n    </main>\n  )\n}\n\nexport const Head = ({ location, data: { site, file } }: HeadProps<Queries.NotesQuery>) => {\n  const { href } = location as typeof location & { href?: string }\n  const pageUrl = href ?? location.pathname\n  const seo = {\n    title: `${getRefinedStringValue(site?.siteMetadata.title)} | Notes`,\n    description: 'Short notes and quick updates from Jiunbae.',\n    heroImage: getRefinedStringValue(file?.publicURL)\n  }\n\n  return <Seo title={seo.title} description={seo.description} heroImage={seo.heroImage} pathname={pageUrl} />\n}\n\nexport default Notes\n","// extracted by mini-css-extract-plugin\nexport var main = \"Notes-module--main--e374b\";\nexport var noteList = \"Notes-module--noteList--70c61\";\nexport var tagList = \"Notes-module--tagList--43a32\";","import clsx from 'clsx'\n\nimport * as styles from './Date.module.scss'\n\ntype DateProps = {\n  date: string;\n  className?: string;\n};\n\nexport const Date = ({ date, className }: DateProps) => <h3 className={clsx(styles.date, className)}>{date}</h3>\n","// extracted by mini-css-extract-plugin\nexport var date = \"Date-module--date--d77e7\";","import clsx from 'clsx'\n\nimport * as styles from './Description.module.scss'\n\ntype DescriptionProps = {\n  description: string;\n  className?: string;\n};\n\nexport const Description = ({ description, className }: DescriptionProps) => (\n  <p className={clsx(styles.description, className)}>{description}</p>\n)\n","// extracted by mini-css-extract-plugin\nexport var description = \"Description-module--description--ecdc9\";","import clsx from 'clsx'\n\nimport { Tag } from '@/components'\n\nimport * as styles from './TagList.module.scss'\n\ntype TagListProps = {\n  tags: readonly string[];\n  className?: string;\n};\n\nexport const TagList = ({ tags, className }: TagListProps) => (\n  <ul className={clsx(styles.tagList, className)}>\n    {tags.map(tag => (\n      <Tag key={tag} name={tag} />\n    ))}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var tagList = \"TagList-module--tagList--4ae6b\";","import clsx from 'clsx'\n\nimport * as styles from './Title.module.scss'\n\ntype TitleProps = {\n  title: string;\n  className?: string;\n};\n\nexport const Title = ({ title, className }: TitleProps) => <h3 className={clsx(styles.title, className)}>{title}</h3>\n","// extracted by mini-css-extract-plugin\nexport var title = \"Title-module--title--8cf89\";","// extracted by mini-css-extract-plugin\nexport var articleLink = \"Post-module--articleLink--b5ab5\";\nexport var card = \"Post-module--card--a4c01\";\nexport var cardCaption = \"Post-module--cardCaption--0aa11\";\nexport var cardDate = \"Post-module--cardDate--c6c0c\";\nexport var cardDescription = \"Post-module--cardDescription--72eec\";\nexport var cardImage = \"Post-module--cardImage--a596d\";\nexport var cardTagList = \"Post-module--cardTagList--5f1d7\";\nexport var cardTitle = \"Post-module--cardTitle--ba640\";\nexport var item = \"Post-module--item--967c1\";\nexport var itemCaption = \"Post-module--itemCaption--6915d\";\nexport var itemDate = \"Post-module--itemDate--33d77\";\nexport var itemDescription = \"Post-module--itemDescription--3070b\";\nexport var itemFigure = \"Post-module--itemFigure--61e4d\";\nexport var itemImage = \"Post-module--itemImage--af857\";\nexport var itemTags = \"Post-module--itemTags--87afa\";\nexport var itemTitle = \"Post-module--itemTitle--e1aa8\";","import { Link, graphql, useStaticQuery } from 'gatsby'\nimport { GatsbyImage, type IGatsbyImageData, getImage } from 'gatsby-plugin-image'\n\nimport { getRefinedImage } from '@/utils'\n\nimport { Date, Description, TagList, Title } from './components'\nimport * as styles from './Post.module.scss'\n\ntype PostProps = {\n  variants: 'card' | 'item';\n  title: string;\n  description: string;\n  date: string;\n  tags: readonly string[];\n  slug: string;\n  heroImage: IGatsbyImageData | undefined;\n  heroImageAlt: string | undefined | null;\n};\n\ntype StyledProps = {\n  heroImage: IGatsbyImageData;\n  heroImageAlt: string;\n  className: string;\n}\n\ntype CardPostProps = Omit<PostProps, 'variants'> & StyledProps\ntype ItemPostProps = Omit<PostProps, 'variants'> & StyledProps\n\nexport const CardPost = ({\n  title,\n  description,\n  date,\n  tags,\n  slug,\n  heroImage,\n  heroImageAlt,\n  className\n}: CardPostProps) => (\n  <Link to={`/posts${slug}`} className={className}>\n    <article className={styles.card}>\n      <figure>\n        <GatsbyImage image={heroImage} alt={heroImageAlt} className={styles.cardImage} />\n        <figcaption className={styles.cardCaption}>\n          <Date date={date} className={styles.cardDate} />\n          <TagList tags={tags} className={styles.cardTagList} />\n          <Title title={title} className={styles.cardTitle} />\n          <Description description={description} className={styles.cardDescription} />\n        </figcaption>\n      </figure>\n    </article>\n  </Link>\n)\n\nexport const ItemPost = ({\n  title,\n  description,\n  date,\n  tags,\n  slug,\n  heroImage,\n  heroImageAlt,\n  className\n}: ItemPostProps) => (\n  <Link to={`/posts${slug}`} className={className}>\n    <article className={styles.item}>\n      <figure className={styles.itemFigure}>\n        <GatsbyImage image={heroImage} alt={heroImageAlt} className={styles.itemImage} />\n        <figcaption className={styles.itemCaption}>\n          <Title title={title} className={styles.itemTitle} />\n          <Description description={description} className={styles.itemDescription} />\n          <Date date={date} className={styles.itemDate} />\n          <TagList tags={tags} className={styles.itemTags} />\n        </figcaption>\n      </figure>\n    </article>\n  </Link>\n)\n\nexport const Post = ({ variants, title, description, date, tags, slug, heroImage, heroImageAlt }: PostProps) => {\n  const defaultImage = useStaticQuery(graphql`\n    query {\n      cover: file(relativePath: { eq: \"cover.png\" }) {\n        childImageSharp {\n          gatsbyImageData(placeholder: BLURRED)\n        }\n      }\n    }\n  `)\n\n  const image = getRefinedImage(heroImage === undefined ? getImage(defaultImage.cover) : heroImage)\n  const imageAlt = heroImageAlt ?? 'Cover Image'\n\n  return (\n    <Link to={`/posts${slug}`} className={styles.articleLink}>\n      {\n        variants === 'card' ? (\n          <CardPost\n            title={title}\n            description={description}\n            date={date}\n            tags={tags}\n            slug={slug}\n            heroImage={image}\n            heroImageAlt={imageAlt}\n            className={styles.articleLink}\n          />\n        ) : (\n        variants === 'item' ? (\n          <ItemPost\n            title={title}\n            description={description}\n            date={date}\n            tags={tags}\n            slug={slug}\n            heroImage={image}\n            heroImageAlt={imageAlt}\n            className={styles.articleLink}\n          />\n        ) : null)\n      }\n    </Link>\n  )\n}\n","import clsx from 'clsx'\n\nimport { Post } from '../Post'\nimport * as styles from './PostList.module.scss'\n\ntype PostListProps = {\n  posts: Queries.HomeQuery['allMarkdownRemark']['nodes'];\n  className?: string;\n};\n\nexport const PostList = ({ posts, className }: PostListProps) => {\n  return (\n    <ul className={clsx(styles.postList, className)}>\n      {posts.map(({ frontmatter: { title, description, date, tags, slug, heroImage, heroImageAlt }, excerpt, id }) => {\n        const summary = description ?? excerpt ?? ''\n\n        return (\n        <Post\n          key={id}\n          variants=\"item\"\n          title={title}\n          description={summary}\n          date={date}\n          tags={tags}\n          slug={slug}\n          heroImage={heroImage?.childImageSharp?.gatsbyImageData}\n          heroImageAlt={heroImageAlt}\n        />\n        )\n      })}\n    </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport var postList = \"PostList-module--postList--61751\";","// extracted by mini-css-extract-plugin\nexport var active = \"TagButtonWithCount-module--active--ce3a5\";\nexport var tagButton = \"TagButtonWithCount-module--tagButton--b55df\";","import clsx from 'clsx'\n\nimport * as styles from './TagButtonWithCount.module.scss'\n\ntype TagButtonWithCountProps = {\n  name: string;\n  count: number;\n  onClick?: () => void;\n  isSelected: boolean;\n};\n\nexport const TagButtonWithCount = ({ name, count, isSelected, onClick }: TagButtonWithCountProps) => (\n  <button onClick={onClick} className={clsx(styles.tagButton, { [styles.active]: isSelected })}>\n    <span>\n      {name} ({count})\n    </span>\n  </button>\n)\n","import clsx from 'clsx'\nimport type { KeyboardEvent, MouseEvent } from 'react'\n\nimport { getRefinedStringValue } from '@/utils'\n\nimport { TagButtonWithCount } from '../TagButtonWithCount'\nimport * as styles from './TagList.module.scss'\n\ninterface TagListProps {\n  tags: { fieldValue: string | null; totalCount: number }[];\n  selectedTag: string;\n  clickTag: (e: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => void;\n  className?: string;\n}\n\nexport const TagList = ({ tags, selectedTag, clickTag, className }: TagListProps) => (\n  <ul\n    className={clsx(styles.tagList, className)}\n    onClick={clickTag}\n    onKeyDown={clickTag}\n    role=\"presentation\"\n  >\n    {tags.map(({ fieldValue, totalCount }) => {\n      const value = getRefinedStringValue(fieldValue)\n      \n      return (\n        <li key={value} className={styles.tagItem} data-tag={value}>\n          <TagButtonWithCount name={value} count={totalCount} isSelected={selectedTag === value} />\n        </li>\n      )\n    })}\n  </ul>\n)\n","// extracted by mini-css-extract-plugin\nexport var tagItem = \"TagList-module--tagItem--61853\";\nexport var tagList = \"TagList-module--tagList--da91f\";","export const TAGS = {\n  ALL: 'All'\n} as const\n","import type { KeyboardEvent, MouseEvent } from 'react'\nimport { useCallback, useMemo, useState } from 'react'\nimport { navigate } from 'gatsby'\n\nimport { TAGS } from '../constants'\n\ntype TagGroup = {\n  fieldValue: string | null;\n  totalCount: number;\n};\n\ntype UseTagOptions = {\n  pathname?: string;\n};\n\nexport const useTag = (\n  totalCount: number,\n  group: ReadonlyArray<TagGroup>,\n  defaultSelectedTag?: string,\n  { pathname = '/' }: UseTagOptions = {}\n) => {\n  const tags = useMemo(() => {\n    const normalizedGroup = Array.from(group, ({ fieldValue, totalCount: count }) => ({ fieldValue, totalCount: count }))\n    return [{ fieldValue: TAGS.ALL, totalCount }, ...normalizedGroup].sort((a, b) => b.totalCount - a.totalCount)\n  }, [group, totalCount])\n  const [selectedTag, setSelectedTag] = useState<string>(defaultSelectedTag ?? TAGS.ALL)\n  const clickTag = useCallback(({ target }: MouseEvent<HTMLElement> | KeyboardEvent<HTMLElement>) => {\n    if (!(target instanceof HTMLElement)) return\n    const tagItem = target.closest('li')\n    const tag = tagItem?.dataset.tag\n    if (tag) {\n      setSelectedTag(tag)\n      navigate(pathname, { replace: true, state: { tag } })\n    }\n  }, [pathname])\n\n  return { tags, selectedTag, clickTag }\n}\n","const NOTE_ANCHOR_PREFIX = 'note-'\n\nexport const sanitizeNoteSlug = (slug: string) => {\n  const trimmed = slug.replace(/^\\/+/, '').replace(/\\/+$/, '')\n  const normalized = trimmed.replace(/[^a-zA-Z0-9-_]/g, '-').replace(/-+/g, '-').toLowerCase()\n  return normalized || 'note'\n}\n\nexport const getNoteAnchorId = (slug: string) => `${NOTE_ANCHOR_PREFIX}${sanitizeNoteSlug(slug)}`\n\nexport const getNotePagePath = (slug: string) => `/notes/${sanitizeNoteSlug(slug)}/`\n\nexport const buildNoteShareUrl = (slug: string) => {\n  if (typeof window !== 'undefined') {\n    const url = new URL(getNotePagePath(slug), window.location.origin)\n    return url.toString()\n  }\n\n  // Fallback during SSR - return absolute path string only\n  return getNotePagePath(slug)\n}\n\nexport const extractSlugFromLocation = (search: string, hash: string) => {\n  const searchParams = new URLSearchParams(search)\n  const fromQuery = searchParams.get('note')\n  if (fromQuery) {\n    return sanitizeNoteSlug(fromQuery)\n  }\n\n  if (hash.startsWith('#') && hash.length > 1) {\n    return sanitizeNoteSlug(decodeURIComponent(hash.substring(1)))\n  }\n\n  return null\n}\n\nexport const buildNoteOgImageUrl = (title: string, summary: string) => {\n  const baseUrl = 'https://og-image.vercel.app/'\n  const encodedTitle = encodeURIComponent(title)\n  const encodedDescription = encodeURIComponent(summary)\n  return `${baseUrl}${encodedTitle}.png?theme=light&md=1&fontSize=75px&images=https%3A%2F%2Fraw.githubusercontent.com%2Fjiunbae%2Fjiunbae.github.io%2Fmain%2Fstatic%2Fprofile.png&description=${encodedDescription}`\n}\n","var React = require('react');\n\nfunction Share (props) {\n    return React.createElement(\"svg\",props,React.createElement(\"path\",{\"d\":\"M18 8C19.6569 8 21 6.65685 21 5C21 3.34315 19.6569 2 18 2C16.3431 2 15 3.34315 15 5C15 5.18401 15.0149 5.36291 15.0435 5.53562L8.72887 8.76777C8.11077 7.70701 6.96383 7 5.66667 7C3.6416 7 2 8.6416 2 10.6667C2 12.6917 3.6416 14.3333 5.66667 14.3333C6.96383 14.3333 8.11077 13.6263 8.72887 12.5656L15.0435 15.7978C15.0149 15.9705 15 16.1494 15 16.3333C15 17.9902 16.3431 19.3333 18 19.3333C19.6569 19.3333 21 17.9902 21 16.3333C21 14.6765 19.6569 13.3333 18 13.3333C16.9631 13.3333 16.0413 13.8488 15.4992 14.6338L9.22391 11.4286C9.40797 10.974 9.507 10.4888 9.507 9.98802C9.507 9.48729 9.40797 9.00211 9.22391 8.54749L15.4992 5.34238C16.0413 6.12738 16.9631 6.64287 18 6.64287Z\",\"fill\":\"currentColor\"}));\n}\n\nShare.defaultProps = {\"width\":\"24\",\"height\":\"24\",\"viewBox\":\"0 0 24 24\",\"fill\":\"none\",\"className\":\"my-class\"};\n\nmodule.exports = Share;\n\nShare.default = Share;\n"],"names":["collapsed","collapsible","copied","Note","_ref","note","className","frontmatter","html","title","date","tags","slug","Error","refinedHtml","getRefinedStringValue","visibleTags","filter","tag","Boolean","normalizedSlug","sanitizeNoteSlug","anchorId","getNoteAnchorId","contentRef","useRef","isCollapsed","setIsCollapsed","useState","isCollapsible","setIsCollapsible","collapseHeight","setCollapseHeight","isLinkCopied","setIsLinkCopied","useEffect","evaluate","element","current","computedStyle","window","getComputedStyle","lineHeight","parseFloat","Number","isFinite","maxHeight","shouldCollapse","scrollHeight","addEventListener","removeEventListener","contentStyle","undefined","_jsx","id","clsx","children","_jsxs","ref","style","styles","dangerouslySetInnerHTML","__html","length","map","type","onClick","async","shareUrl","buildNoteShareUrl","_navigator$clipboard","navigator","clipboard","writeText","fallbackInput","document","createElement","value","body","appendChild","select","execCommand","removeChild","setTimeout","prompt","ShareIcon","toggleCollapse","prev","NoteList","notes","Head","_ref3","location","data","site","file","href","pageUrl","pathname","seo","siteMetadata","description","heroImage","publicURL","Seo","_location$state","nodes","allNotes","totalCount","group","allMarkdownRemark","selectedTag","clickTag","useTag","state","visibleNotes","useMemo","_ref2","_frontmatter$tags","TAGS","ALL","some","_location$state2","slugFromState","slugFromLocation","extractSlugFromLocation","search","hash","targetSlug","target","querySelector","timer","highlight","setAttribute","scrollIntoView","behavior","block","removeAttribute","clearTimeout","TagList","FloatingButton","Date","Description","Tag","name","Title","articleLink","CardPost","heroImageAlt","Link","to","GatsbyImage","image","alt","ItemPost","Post","variants","defaultImage","useStaticQuery","getRefinedImage","getImage","cover","imageAlt","PostList","posts","_heroImage$childImage","excerpt","summary","childImageSharp","gatsbyImageData","active","TagButtonWithCount","count","isSelected","onKeyDown","role","fieldValue","defaultSelectedTag","_temp","normalizedGroup","Array","from","concat","sort","a","b","setSelectedTag","useCallback","HTMLElement","tagItem","closest","dataset","navigate","replace","toLowerCase","getNotePagePath","URL","origin","toString","fromQuery","URLSearchParams","get","startsWith","decodeURIComponent","substring","buildNoteOgImageUrl","encodeURIComponent","React","Share","props","defaultProps","module","exports","default"],"sourceRoot":""}