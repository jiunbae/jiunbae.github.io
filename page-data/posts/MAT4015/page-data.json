{"componentChunkName":"component---src-templates-post-tsx","path":"/posts/MAT4015/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"object-tracking\">Object tracking</h1>\n<p>Object tracking based on color histogram and real-time back projection</p>\n<h2 id=\"process\">Process</h2>\n<ol>\n<li>Modeling color histogram of selected object</li>\n<li>Calculate histogram similarity</li>\n<li>Back projection</li>\n<li>Mean shift process (clustering of pixels with back projected weights)</li>\n<li>Update object position and parameters after tracking</li>\n</ol>\n<hr>\n<p><strong>Additional functions</strong></p>\n<ul>\n<li>Dynamic navigation area</li>\n<li>Dynamic change of object color histogram</li>\n<li>Dynamic change of object size</li>\n</ul>\n<h2 id=\"codes\">Codes</h2>\n<ul>\n<li><strong>Calculate color histogram</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">double * hists = (double*)calloc(param.hist_bins, sizeof(double)), hist_size = 256 / param.hist_bins;\nint eWidth = min(rc.x + rc.width, img.size().width),\n    eHeight = min(rc.y + rc.height, img.size().height);\nfor (int i = rc.x; i &lt; eWidth; ++i)\n    for (int j = rc.y; j &lt; eHeight; ++j)\n        hists[matrixAt(img, i, j) / (int)hist_size]++;\n\ndouble total = 0;\nfor (int i = 0; i &lt; param.hist_bins; ++i)\n    total += hists[i] * hists[i];\ntotal = sqrt(total);\nfor (int i = 0; i &lt; param.hist_bins; ++i)\n    hists[i] /= total;\n\nreturn hists;</code></pre></div>\n<ul>\n<li><strong>Back projection</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Mat imx = hsv.clone();\nfor (int i = 0; i &lt; hsv.cols; ++i)\n    for (int j = 0; j &lt; hsv.rows; ++j)\n    {\n        w = this->objectHists[matrixAt(imx, i, j) / param.hist_bins];\n        double pixel[] = { 255 * w, 255 * w, 255 * w };\n        matrixSet(imx, i, j, pixel);\n    }</code></pre></div>\n<ul>\n<li><strong>Mean shift</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Mat hsv;\ncvtColor(img, hsv, CV_BGR2HSV);\nRect nRect = myRect, temp, bRect = myRect;\ndouble nX = 0, nY = 0, tW = 0, w;\ndo {\n    tW = 0, nX = 0; nY = 0; myRect = nRect;\n\n    // set searching area\n    temp = Rect(max(nRect.x - (int)param.search_range, 0), max(nRect.y - (int)param.search_range, 0),\n        min(nRect.width + (int)param.search_range * 2, hsv.rows), min(nRect.height + (int)param.search_range * 2, hsv.cols));\n    double sRatioWidth = temp.width / param.sampling, sRatioHeight = temp.height / param.sampling;\n    for (int i = 0; i &lt;= temp.width / 2; i+=sRatioWidth)\n        for (int j = 0; j &lt;= temp.height / 2; j+=sRatioHeight)\n        {\n            w = mySimilarity(hsv, Rect(temp.x + (temp.width / 2) + i, temp.y + (temp.height / 2) + j, nRect.width, nRect.height), this->objectHists);\n            tW += w;\n            nX += w * (temp.x + (temp.width / 2) + i);\n            nY += w * (temp.y + (temp.height / 2) + j);\n            if (i != 0 || j != 0)\n            {\n                w = mySimilarity(hsv, Rect(temp.x + (temp.width / 2) - i, temp.y + (temp.height / 2) - j, nRect.width, nRect.height), this->objectHists);\n                tW += w;\n                nX += w * (temp.x + (temp.width / 2) - i);\n                nY += w * (temp.y + (temp.height / 2) - j);\n            }\n        }\n    nX /= tW;\n    nY /= tW;\n\n    // get mean of w, if w > 0.25 make range narrow, or not make extend;\n    double twRatio = tW / ((temp.width / sRatioWidth) * (temp.height / sRatioHeight));\n    param.search_range *= (twRatio > (EXTEND_LIMIT) ? 1 - twRatio : (1 - EXTEND_LIMIT) +twRatio);\n\n    nRect = Rect(max((int)nX - nRect.width / 2, 0), max((int)nY - nRect.height / 2, 0), myRect.width, myRect.height);\n} while (sqrt(pow(myRect.x - nRect.x, 2) + pow(myRect.y - nRect.y, 2)) > param.search_range);</code></pre></div>","excerpt":"Object tracking Object tracking based on color histogram and real-time back projection Process Modeling color histogram of selected object Calculate histogram similarity Back projection Mean shift prâ€¦","frontmatter":{"date":"16.06.23","description":"MAT4015: Fundamentals of applied probability and random processes","heroImage":null,"heroImageAlt":null,"tags":["curriculum"],"title":"MAT4015: Fundamentals of applied probability and random processes"},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#object-tracking\">Object tracking</a></p>\n<ul>\n<li><a href=\"#process\">Process</a></li>\n<li><a href=\"#codes\">Codes</a></li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"id":"1eb94e0e-23ff-570a-b4e3-40ee29dbbc12","frontmatter__slug":"/MAT4015","previous":"/word2vec","previousTitle":"Word Embedding","next":null,"nextTitle":null}},"staticQueryHashes":["12962592","3399079524","3470099541","76375841"],"slicesMap":{}}